auditbeat.modules:
- module: auditd
  resolve_ids: true
  failure_mode: silent
  include_raw_message: false
  include_warnings: false
  backlog_limit: 8192
  audit_rules: |
{% for rules in auditbeat_audit_rules %}
    {{ rules }}
{% endfor %}

- module: file_integrity
  paths:
  - /bin
  - /usr/bin
  - /usr/local/bin
  - /sbin
  - /usr/sbin
  - /usr/local/sbin
  - /etc
  exclude_files:
  - '(?i)\.sw[nop]$'
  - '~$'
  - '/\.git($|/)'
  include_files: []
  recursive: true

- module: system
  datasets:
    - login
    - package
    - user
  period: 1m
  state.period: 12h
  user.detect_password_changes: true
  login.wtmp_file_pattern: /var/log/wtmp*
  login.btmp_file_pattern: /var/log/btmp*

queue.mem:
  events: 32768

{% if beats_output_type == 'elasticsearch' %}
setup.template.json.enabled: true
setup.template.json.path: '/etc/auditbeat/auditbeat-template.json'
setup.template.json.name: 'auditbeat'
setup.template.overwrite: true
setup.ilm.enabled: false
{% endif %}

output.{{ beats_output_type }}:
  bulk_max_size: 1000
{% if beats_output_type == 'elasticsearch' %}
  protocol: "{% if beats_output_auth | bool and beats_output_https | bool %}https{% else %}http{% endif %}"
{% if beats_output_auth %}
  username: "{{ beats_output_user }}"
  password: "{{ beats_output_pass }}"
{% endif %}
  ssl:
    supported_protocols: [TLSv1.2, TLSv1.3]
    verification_mode: none
{% endif %}
  hosts: ['{{ beats_output_host | list | join(":" + beats_output_port + "', '") }}:{{ beats_output_port }}']
  loadbalance: {% if beats_output_host | length > 1 %}true{% else %}false{% endif %}

fields_under_root: true
fields:
  enviornment: {{ environments | default("ENV") | upper }}
  datacenter: {{ datacenter | default("") | lower }}
  domain: {{ domain | default("") | lower }}
  group: {{ group_names[-1] | default("GROUP") | upper }}
  source: {{ ansible_fqdn }}
{% if tags is defined %}
{% for key,value in tags.iteritems() %}
  {{ key }}: {{ value }}
{% endfor %}
{% endif %}

processors:
  - add_cloud_metadata: ~
  - drop_event:
     when:
        equals:
          auditd.summary.object.type: process
  - drop_fields:
     fields: ["{{ auditbeat_drop_fields | list | join('", "') }}"]

logging.level: error
logging.to_syslog: true

http:
  enabled: true
  host: localhost
  port: {{ beats_port_arg.http }}
